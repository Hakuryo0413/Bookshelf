import {
  Fade_default,
  init_Fade
} from "./chunk-WNQCWDMX.js";
import {
  init_base
} from "./chunk-QM4CG7DY.js";
import {
  init_styled,
  init_useThemeProps,
  styled_default,
  useThemeProps
} from "./chunk-TTLVJ47Q.js";
import {
  init_generateUtilityClass
} from "./chunk-JNKABULS.js";
import {
  _extends,
  _objectWithoutPropertiesLoose,
  clsx_m_default,
  composeClasses,
  generateUtilityClass,
  generateUtilityClasses,
  init_clsx_m,
  init_esm,
  init_extends,
  init_objectWithoutPropertiesLoose,
  require_prop_types
} from "./chunk-DAFBLP42.js";
import {
  require_jsx_runtime
} from "./chunk-DT77FM6J.js";
import {
  require_react
} from "./chunk-4D5CYJYK.js";
import {
  __esm,
  __toESM
} from "./chunk-CEQRFMJQ.js";

// node_modules/@mui/material/esm/Backdrop/backdropClasses.js
function getBackdropUtilityClass(slot) {
  return generateUtilityClass("MuiBackdrop", slot);
}
var backdropClasses, backdropClasses_default;
var init_backdropClasses = __esm({
  "node_modules/@mui/material/esm/Backdrop/backdropClasses.js"() {
    init_esm();
    init_generateUtilityClass();
    backdropClasses = generateUtilityClasses("MuiBackdrop", ["root", "invisible"]);
    backdropClasses_default = backdropClasses;
  }
});

// node_modules/@mui/material/esm/Backdrop/Backdrop.js
var React, import_prop_types, import_jsx_runtime, _excluded, useUtilityClasses, BackdropRoot, Backdrop, Backdrop_default;
var init_Backdrop = __esm({
  "node_modules/@mui/material/esm/Backdrop/Backdrop.js"() {
    init_objectWithoutPropertiesLoose();
    init_extends();
    React = __toESM(require_react());
    import_prop_types = __toESM(require_prop_types());
    init_clsx_m();
    init_base();
    init_styled();
    init_useThemeProps();
    init_Fade();
    init_backdropClasses();
    import_jsx_runtime = __toESM(require_jsx_runtime());
    _excluded = ["children", "component", "components", "componentsProps", "className", "invisible", "open", "slotProps", "slots", "transitionDuration", "TransitionComponent"];
    useUtilityClasses = (ownerState) => {
      const {
        classes,
        invisible
      } = ownerState;
      const slots = {
        root: ["root", invisible && "invisible"]
      };
      return composeClasses(slots, getBackdropUtilityClass, classes);
    };
    BackdropRoot = styled_default("div", {
      name: "MuiBackdrop",
      slot: "Root",
      overridesResolver: (props, styles) => {
        const {
          ownerState
        } = props;
        return [styles.root, ownerState.invisible && styles.invisible];
      }
    })(({
      ownerState
    }) => _extends({
      position: "fixed",
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      right: 0,
      bottom: 0,
      top: 0,
      left: 0,
      backgroundColor: "rgba(0, 0, 0, 0.5)",
      WebkitTapHighlightColor: "transparent"
    }, ownerState.invisible && {
      backgroundColor: "transparent"
    }));
    Backdrop = React.forwardRef(function Backdrop2(inProps, ref) {
      var _slotProps$root, _ref, _slots$root;
      const props = useThemeProps({
        props: inProps,
        name: "MuiBackdrop"
      });
      const {
        children,
        component = "div",
        components = {},
        componentsProps = {},
        className,
        invisible = false,
        open,
        slotProps = {},
        slots = {},
        transitionDuration,
        // eslint-disable-next-line react/prop-types
        TransitionComponent = Fade_default
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded);
      const ownerState = _extends({}, props, {
        component,
        invisible
      });
      const classes = useUtilityClasses(ownerState);
      const rootSlotProps = (_slotProps$root = slotProps.root) != null ? _slotProps$root : componentsProps.root;
      return (0, import_jsx_runtime.jsx)(TransitionComponent, _extends({
        in: open,
        timeout: transitionDuration
      }, other, {
        children: (0, import_jsx_runtime.jsx)(BackdropRoot, _extends({
          "aria-hidden": true
        }, rootSlotProps, {
          as: (_ref = (_slots$root = slots.root) != null ? _slots$root : components.Root) != null ? _ref : component,
          className: clsx_m_default(classes.root, className, rootSlotProps == null ? void 0 : rootSlotProps.className),
          ownerState: _extends({}, ownerState, rootSlotProps == null ? void 0 : rootSlotProps.ownerState),
          classes,
          ref,
          children
        }))
      }));
    });
    true ? Backdrop.propTypes = {
      // ----------------------------- Warning --------------------------------
      // | These PropTypes are generated from the TypeScript type definitions |
      // |     To update them edit the d.ts file and run "yarn proptypes"     |
      // ----------------------------------------------------------------------
      /**
       * The content of the component.
       */
      children: import_prop_types.default.node,
      /**
       * Override or extend the styles applied to the component.
       */
      classes: import_prop_types.default.object,
      /**
       * @ignore
       */
      className: import_prop_types.default.string,
      /**
       * The component used for the root node.
       * Either a string to use a HTML element or a component.
       */
      component: import_prop_types.default.elementType,
      /**
       * The components used for each slot inside.
       *
       * This prop is an alias for the `slots` prop.
       * It's recommended to use the `slots` prop instead.
       *
       * @default {}
       */
      components: import_prop_types.default.shape({
        Root: import_prop_types.default.elementType
      }),
      /**
       * The extra props for the slot components.
       * You can override the existing props or add new ones.
       *
       * This prop is an alias for the `slotProps` prop.
       * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.
       *
       * @default {}
       */
      componentsProps: import_prop_types.default.shape({
        root: import_prop_types.default.object
      }),
      /**
       * If `true`, the backdrop is invisible.
       * It can be used when rendering a popover or a custom select component.
       * @default false
       */
      invisible: import_prop_types.default.bool,
      /**
       * If `true`, the component is shown.
       */
      open: import_prop_types.default.bool.isRequired,
      /**
       * The extra props for the slot components.
       * You can override the existing props or add new ones.
       *
       * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.
       *
       * @default {}
       */
      slotProps: import_prop_types.default.shape({
        root: import_prop_types.default.object
      }),
      /**
       * The components used for each slot inside.
       *
       * This prop is an alias for the `components` prop, which will be deprecated in the future.
       *
       * @default {}
       */
      slots: import_prop_types.default.shape({
        root: import_prop_types.default.elementType
      }),
      /**
       * The system prop that allows defining system overrides as well as additional CSS styles.
       */
      sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object]),
      /**
       * The duration for the transition, in milliseconds.
       * You may specify a single timeout for all transitions, or individually with an object.
       */
      transitionDuration: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.shape({
        appear: import_prop_types.default.number,
        enter: import_prop_types.default.number,
        exit: import_prop_types.default.number
      })])
    } : void 0;
    Backdrop_default = Backdrop;
  }
});

// node_modules/@mui/material/esm/Backdrop/index.js
var init_Backdrop2 = __esm({
  "node_modules/@mui/material/esm/Backdrop/index.js"() {
    init_Backdrop();
    init_backdropClasses();
    init_backdropClasses();
  }
});

export {
  getBackdropUtilityClass,
  backdropClasses_default,
  Backdrop_default,
  init_Backdrop2 as init_Backdrop
};
//# sourceMappingURL=chunk-GHLS4XBN.js.map
